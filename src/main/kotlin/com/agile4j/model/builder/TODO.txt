1. T -> 是否可为Null，由使用方自己控制，不再强制出现Collection<T>?这种使用方式
2. view对象最好是不可变的，如何把inject功能通过类似代理的方式在内部集成，而非通过set注入
3. 提供一个上下文注入的方式，解除对scope的依赖


1. indexBy buildBy 什么场景下必须声明，从业务角度分析，而非实现角度
2. 如果Accompany没有实现equals&hashCode，怎么办，能正常运行么
3. 类似：thisIjac.map { ija -> ijaToIjt[ija] } 的用法可能在集合中混入null，需要滤掉并打ERROR日志
